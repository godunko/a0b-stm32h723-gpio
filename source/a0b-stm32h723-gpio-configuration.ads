--
--  Copyright (C) 2024, Vadim Godunko <vgodunko@gmail.com>
--
--  SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
--

--  pragma Restrictions (No_Elaboration_Code);

pragma Ada_2022;

private package A0B.STM32H723.GPIO.Configuration
  with Preelaborate
is

   AF : constant array (Function_Line) of Line_Descriptor_Array :=
     [FMC_A0     => [(True, F, 0, 12), others => <>],
      FMC_A1     => [(True, F, 1, 12), others => <>],
      FMC_A2     => [(True, F, 2, 12), others => <>],
      FMC_A3     => [(True, F, 3, 12), others => <>],
      FMC_A4     => [(True, F, 4, 12), others => <>],
      FMC_A5     => [(True, F, 5, 12), others => <>],
      FMC_A6     => [(True, F, 12, 12), others => <>],
      FMC_A7     => [(True, F, 13, 12), others => <>],
      FMC_A8     => [(True, F, 14, 12), others => <>],
      FMC_A9     => [(True, F, 15, 12), others => <>],
      FMC_A10    => [(True, G, 0, 12), others => <>],
      FMC_A11    => [(True, G, 1, 12), others => <>],
      FMC_A12    => [(True, G, 2, 12), others => <>],
      FMC_A13    => [(True, G, 3, 12), others => <>],
      FMC_A14    => [(True, G, 4, 12), others => <>],
      FMC_A15    => [(True, G, 5, 12), others => <>],
      FMC_A16    => [(True, D, 11, 12), others => <>],
      FMC_A17    => [(True, D, 12, 12), others => <>],
      FMC_A18    => [(True, D, 13, 12), others => <>],
      FMC_A19    => [(True, A, 0, 12), (True, E, 3, 12), others => <>],
      FMC_A20    => [(True, E, 4, 12), others => <>],
      FMC_A21    => [(True, E, 5, 12), others => <>],
      FMC_A22    => [(True, C, 4, 1), (True, E, 6, 12), others => <>],
      FMC_A23    => [(True, E, 2, 12), others => <>],
      FMC_A24    => [(True, G, 13, 12), others => <>],
      FMC_A25    => [(True, C, 0, 9), (True, G, 14, 12), others => <>],
      FMC_AD0    => [(True, D, 14, 12), others => <>],
      FMC_AD1    => [(True, D, 15, 12), others => <>],
      FMC_AD2    => [(True, D, 0, 12), others => <>],
      FMC_AD3    => [(True, D, 1, 12), others => <>],
      FMC_AD4    => [(True, E, 7, 12), others => <>],
      FMC_AD5    => [(True, E, 8, 12), others => <>],
      FMC_AD6    => [(True, C, 12, 1), (True, E, 9, 12), others => <>],
      FMC_AD7    => [(True, D, 2, 1), (True, E, 10, 12), others => <>],
      FMC_AD8    => [(True, A, 4, 12), (True, E, 11, 12), others => <>],
      FMC_AD9    => [(True, A, 5, 12), (True, E, 12, 12), others => <>],
      FMC_AD10   => [(True, B, 14, 12), (True, E, 13, 12), others => <>],
      FMC_AD11   => [(True, B, 15, 12), (True, E, 14, 12), others => <>],
      FMC_AD12   => [(True, C, 0, 1), (True, E, 15, 12), others => <>],
      FMC_AD13   => [(True, D, 8, 12), others => <>],
      FMC_AD14   => [(True, D, 9, 12), others => <>],
      FMC_AD15   => [(True, D, 10, 12), others => <>],
      FMC_D0     => [(True, D, 14, 12), others => <>],
      FMC_D1     => [(True, D, 15, 12), others => <>],
      FMC_D2     => [(True, D, 0, 12), others => <>],
      FMC_D3     => [(True, D, 1, 12), others => <>],
      FMC_D4     => [(True, E, 7, 12), others => <>],
      FMC_D5     => [(True, E, 8, 12), others => <>],
      FMC_D6     => [(True, C, 12, 1), (True, E, 9, 12), others => <>],
      FMC_D7     => [(True, D, 2, 1), (True, E, 10, 12), others => <>],
      FMC_D8     => [(True, A, 4, 12), (True, E, 11, 12), others => <>],
      FMC_D9     => [(True, A, 5, 12), (True, E, 12, 12), others => <>],
      FMC_D10    => [(True, B, 14, 12), (True, E, 13, 12), others => <>],
      FMC_D11    => [(True, B, 15, 12), (True, E, 14, 12), others => <>],
      FMC_D12    => [(True, C, 0, 1), (True, E, 15, 12), others => <>],
      FMC_D13    => [(True, D, 8, 12), others => <>],
      FMC_D14    => [(True, D, 9, 12), others => <>],
      FMC_D15    => [(True, D, 10, 12), others => <>],
      FMC_ALE    => [(True, D, 12, 12), others => <>],
      FMC_BA0    => [(True, G, 4, 12), others => <>],
      FMC_BA1    => [(True, G, 5, 12), others => <>],
      FMC_CLE    => [(True, D, 11, 12), others => <>],
      FMC_CLK    => [(True, D, 3, 12), others => <>],
      FMC_INT    => [(True, C, 8, 10), (True, G, 7, 12), others => <>],
      FMC_NBL0   => [(True, E, 0, 12), others => <>],
      FMC_NBL1   => [(True, E, 1, 12), others => <>],
      FMC_NCAS   => [(True, G, 15, 12), others => <>],
      FMC_NCE    => [(True, C, 8, 9), (True, G, 9, 12), others => <>],
      FMC_NE1    => [(True, C, 7, 9), (True, D, 7, 12), others => <>],
      FMC_NE2    => [(True, C, 8, 9), (True, G, 9, 12), others => <>],
      FMC_NE3    => [(True, G, 6, 9), (True, G, 10, 12), others => <>],
      FMC_NE4    => [(True, G, 12, 12), others => <>],
      FMC_NL     => [(True, B, 7, 12), others => <>],
      FMC_NOE    => [(True, D, 4, 12), others => <>],
      FMC_NRAS   => [(True, F, 11, 12), others => <>],
      FMC_NWAIT  => [(True, C, 6, 9), (True, D, 6, 12), others => <>],
      FMC_NWE    => [(True, D, 5, 12), others => <>],
      FMC_SDCKE0 => [(True, C, 3, 12), (True, C, 5, 12), others => <>],
      FMC_SDCKE1 => [(True, B, 5, 12), others => <>],
      FMC_SDCLK  => [(True, G, 8, 12), others => <>],
      FMC_SDNE0  => [(True, C, 2, 12), (True, C, 4, 12), others => <>],
      FMC_SDNE1  => [(True, B, 6, 12), others => <>],
      FMC_SDNWE  => [(True, A, 7, 12), (True, C, 0, 12), others => <>],

      LPTIM1_ETR => [(True, E, 0, 1), (True, G, 14, 1), others => <>],
      LPTIM1_IN1 => [(True, D, 12, 1), (True, G, 12, 1), others => <>],
      LPTIM1_IN2 => [(True, E, 1, 1), (True, G, 11, 1), others => <>],
      LPTIM1_OUT => [(True, D, 13, 1), (True, G, 13, 1), others => <>],
      LPTIM2_ETR => [(True, B, 11, 3), (True, E, 0, 4), others => <>],
      LPTIM2_IN1 => [(True, B, 10, 3), (True, D, 12, 3), others => <>],
      LPTIM2_IN2 => [(True, D, 11, 3), others => <>],
      LPTIM2_OUT => [(True, B, 13, 3), others => <>],
      LPTIM3_OUT => [(True, A, 1, 3), others => <>],
      LPTIM4_OUT => [(True, A, 2, 3), others => <>],
      LPTIM5_OUT => [(True, A, 3, 3), others => <>],

      PSSI_D0    => [(True, A, 9, 13), (True, C, 6, 13), others => <>],
      PSSI_D1    => [(True, A, 10, 13), (True, C, 7, 13), others => <>],
      PSSI_D2    => [(True, B, 13, 13), (True, C, 8, 13), (True, E, 0, 13), (True, G, 10, 13), others => <>],
      PSSI_D3    => [(True, C, 9, 13), (True, E, 1, 13), (True, G, 11, 13), others => <>],
      PSSI_D4    => [(True, C, 11, 13), (True, E, 4, 13), others => <>],
      PSSI_D5    => [(True, B, 6, 13), (True, D, 3, 13), others => <>],
      PSSI_D6    => [(True, B, 8, 13), (True, E, 5, 13), others => <>],
      PSSI_D7    => [(True, B, 9, 13), (True, E, 6, 13), others => <>],
      PSSI_D8    => [(True, C, 10, 13), others => <>],
      PSSI_D9    => [(True, C, 12, 13), others => <>],
      PSSI_D10   => [(True, B, 5, 13), (True, D, 6, 13), others => <>],
      PSSI_D11   => [(True, D, 2, 13), (True, F, 10, 13), others => <>],
      PSSI_D12   => [(True, D, 12, 13), (True, F, 11, 13), (True, G, 6, 13), others => <>],
      PSSI_D13   => [(True, D, 13, 13), (True, G, 7, 13), (True, G, 15, 13), others => <>],
      PSSI_D14   => [(True, A, 5, 13), others => <>],
      PSSI_D15   => [(True, C, 5, 4), (True, F, 10, 4), others => <>],
      PSSI_DE    => [(True, A, 4, 13), others => <>],
      PSSI_PDCK  => [(True, A, 6, 13), others => <>],
      PSSI_RDY   => [(True, B, 7, 13), (True, G, 9, 13), others => <>],

      SPI6_MISO  => [(True, A, 6, 8), (True, B, 4, 8), (True, G, 12, 5), others => <>],
      SPI6_MOSI  => [(True, A, 7, 8), (True, B, 5, 8), (True, G, 14, 5), others => <>],
      SPI6_NSS   => [(True, A, 0, 5), (True, A, 4, 8), (True, A, 15, 7), (True, G, 8, 5)],
      SPI6_SCK   => [(True, A, 5, 8), (True, B, 3, 8), (True, C, 12, 5), (True, G, 13, 5)]];

end A0B.STM32H723.GPIO.Configuration;
